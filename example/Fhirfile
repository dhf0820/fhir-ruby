# vim:ft=ruby
configure do |cfg|
  cfg.fhir_xml = '../spec/tmp/cache.xml'
  cfg.datatypes_xsd = '../fhir-base.xsd'
end

generate do
  models_folder = File.dirname(__FILE__)+ '/models/fhir'
  migrations_folder = File.dirname(__FILE__)+ '/migrations'
  FileUtils.mkdir_p(migrations_folder)
  FileUtils.rm_rf(models_folder)
  rules = {
    %w[MedicationStatement dosage site coding] => {max: '1'},
    %w[MedicationStatement dosage route coding] => {max: '1'},
    %w[MedicationStatement dosage method coding] => {max: '1'},
    %w[MedicationStatement identifier] => {max: '1'}
  }

  resources = resource_elements
  .set_simple_attribute
  .expand_with_datatypes
  .reject_technical_elements
  .select_branch(['MedicationStatement'])
  .apply_rules(rules)

  # # models
  # tables
  # .template('model.rb.erb')
  # .file(models_folder) { |el| el.path.to_a.join("_").underscore + '.rb' }

  # schema
  table_definitions = resources.resource_tables
  schema = table_definitions.template('migration.rb.erb').all.uniq.join("\n")

  File.open(File.join(migrations_folder, 'schema.rb'), 'w') do |f|
    f.write("execute('drop schema if exists fhir cascade; create schema fhir')\n")
    f.write(schema)
  end
end
